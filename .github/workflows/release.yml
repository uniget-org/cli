name: Release

on:
  push:
    tags:
    - "v*"

jobs:

  prepare:
    name: Prepare
    runs-on: ubuntu-22.04
    outputs:
      tag: ${{ steps.get_version.outputs.tag }}
      version: ${{ steps.get_version.outputs.version }}
    steps:

    - name: printenv
      run: |
        printenv | sort

    - name: Checkout code
      uses: actions/checkout@v3
      with:
        ref: ${{ needs.prepare.outputs.tag }}

    - name: Get version
      id: get_version
      run: |
        TAG="${GITHUB_REF#refs/tags/}"
        echo "tag=${TAG}" >>"${GITHUB_OUTPUT}"
        echo "version=${TAG#v}" >>"${GITHUB_OUTPUT}"

  release:
    name: Release
    needs:
    - prepare
    runs-on: ubuntu-22.04
    steps:

    - name: Checkout code
      uses: actions/checkout@v3
      with:
        ref: ${{ needs.prepare.outputs.tag }}

    - name: Install docker-setup
      uses: nicholasdille/docker-setup-action@main
      with:
        prefix: helper
        tools: go goreleaser syft
        log-level: debug
        plan: true

    - name: Workaround
      run: |
        if file helper/usr/local/bin/goreleaser | grep -q amd64; then
            echo "goreleaser is already installed"

        else
            curl --silent --location --fail https://github.com/goreleaser/goreleaser/releases/latest/download/goreleaser_Linux_x86_64.tar.gz \
            | tar --extract --gzip --directory=helper/usr/local/bin/ goreleaser
        fi

    - name: Build and release binaries
      env:
        GITHUB_TOKEN: ${{ secrets.BOT_GITHUB_TOKEN }}
      run: |
        helper/usr/local/bin/goreleaser release --skip-sbom

  build:
    name: Build
    needs:
    - prepare
    - release
    runs-on: ubuntu-22.04
    steps:

    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: nicholasdille
        password: ${{ secrets.PACKAGES_TOKEN }}

    - name: Install docker-setup
      uses: nicholasdille/docker-setup-action@main
      with:
        prefix: helper
        tools: gojq regclient yq
        log-level: trace
        plan: true

    - name: Update manifest
      run: |
        VERSION=${{ needs.prepare.outputs.version }} \
            helper/usr/local/bin/yq eval --inplace '.version = env(VERSION)' tools/docker-setup/manifest.yaml

    - name: Build and push
      run: |
        make docker-setup--push metadata.json--push

    - name: Commit updated manifest
      uses: stefanzweifel/git-auto-commit-action@v4
      with:
        branch: main
        create_branch: false
        file_pattern: tools/docker-setup/manifest.yaml
        commit_message: "Version bump for docker-setup"
