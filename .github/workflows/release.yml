name: Release

on:
  push:
    tags:
    - "v*"

jobs:

  prepare:
    name: Prepare
    runs-on: ubuntu-20.04
    outputs:
      tag: ${{ steps.get_version.output.tag }}
      version: ${{ steps.get_version.outputs.version }}
      prerelease: ${{ steps.get_version.outputs.prerelease }}
    steps:

    - name: printenv
      run: |
        printenv | sort

    - name: Checkout code
      uses: actions/checkout@v3
      with:
        ref: ${{ needs.prepare.outputs.tag }}

    - name: Install docker-setup
      uses: nicholasdille/docker-setup-action@main
      with:
        prefix: helper
        tools: semver

    - name: Get version
      id: get_version
      run: |
        TAG="${GITHUB_REF#refs/tags/}"
        echo "::set-output name=tag::${TAG}"
        echo "::set-output name=version::${TAG#v}"
        echo "::set-output name=prerelease::$(if test "$(helper/usr/local/bin/semver get prerel "${TAG#v}")" == ""; then echo "false"; else echo "true"; fi)"

  release:
    name: Release
    needs:
    - prepare
    runs-on: ubuntu-20.04
    steps:

    - name: Checkout code
      uses: actions/checkout@v3
      with:
        ref: ${{ needs.prepare.outputs.tag }}

    - name: Build binary
      run: |
        make bin/docker-setup

    - name: Create checksum
      run: |
        sha256sum bin/docker-setup >bin/docker-setup.sha256

    - name: Create changelog
      env:
        GITHUB_TOKEN: ${{ secrets.BOT_GITHUB_TOKEN }}
        TAG: ${{ needs.prepare.outputs.tag }}
      run: |
        LATEST_RELEASE_PUBLISHED="$(
            curl "${GITHUB_API_URL}/repos/${GITHUB_REPOSITORY}/releases/latest" \
                --silent \
                --user "github-ci-token:${GITHUB_TOKEN}" \
            | jq --raw-output '.published_at'
        )"
        echo "Latest release was published at ${LATEST_RELEASE_PUBLISHED}."
        echo "## Installation instructions" >>body.txt
        echo >>body.txt
        echo '```bash' >>body.txt
        echo "curl --silent --location --output /usr/local/bin/docker-setup https://github.com/${GITHUB_REPOSITORY}/releases/download/${{ needs.prepare.outputs.tag }}/docker-setup" >>body.txt
        echo "chmod +x /usr/local/bin/docker-setup" >>body.txt
        echo "docker-setup install --plan" >>body.txt
        echo '```' >>body.txt
        echo >>body.txt
        echo "## Closed issues and pull requests" >>body.txt
        echo >>body.txt
        hub issue \
            --state closed \
            --include-pulls \
            --since "${LATEST_RELEASE_PUBLISHED}" \
            --format "- %t ([%i](%U))%n" \
            --milestone "${TAG}" \
        | tee body.txt || true

    - name: Create release
      id: create_release
      uses: ncipollo/release-action@v1
      with:
        token: ${{ secrets.BOT_GITHUB_TOKEN }}
        allowUpdates: true
        name: "Version ${{ needs.prepare.outputs.version }}"
        tag: ${{ needs.prepare.outputs.tag }}
        draft: false
        bodyFile: body.txt
        prerelease: ${{ needs.prepare.outputs.prerelease }}
        replacesArtifacts: true
        artifacts: "bin/docker-setup,bin/docker-setup.sha256"

  build:
    name: Build
    needs:
    - prepare
    - release
    runs-on: ubuntu-20.04
    steps:

    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: nicholasdille
        password: ${{ secrets.PACKAGES_TOKEN }}

    - name: Install docker-setup
      uses: nicholasdille/docker-setup-action@main
      with:
        prefix: helper
        tools: gojq regclient yq

    - name: Update manifest
      run: |
        VERSION=${{ needs.prepare.outputs.version }} \
            helper/usr/local/bin/yq eval --inplace '.version = env(VERSION)' tools/docker-setup/manifest.yaml

    - name: Build and push
      run: |
        make docker-setup--push metadata.json--push

    - name: Commit updated manifest
      uses: stefanzweifel/git-auto-commit-action@v4
      with:
        branch: main
        create_branch: false
        file_pattern: tools/docker-setup/manifest.yaml
        commit_message: "Version bump for docker-setup"
